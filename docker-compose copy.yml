version: '3.6'
services:
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    user: "0"
    ports:
    - "3000:3000"
    environment:
    - GF_PATHS_DATA=/var/lib/grafana
    - GF_PATHS_LOGS=/var/log/grafana
    volumes:
    - ./volumes/grafana/data:/var/lib/grafana
    - ./volumes/grafana/log:/var/log/grafana
    networks:
    - iotstack_nw

  home_assistant:
    container_name: home_assistant
    image: homeassistant/home-assistant:stable
    restart: unless-stopped
    ports:
    - "8123:8123"
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - ./volumes/home_assistant:/config
  #network_mode: host

  homebridge:
    container_name: homebridge
    image: oznu/homebridge:no-avahi-arm32v6
    restart: unless-stopped
    environment:
    - TZ=Etc/UTC
    - PGID=1000
    - PUID=1000
    - HOMEBRIDGE_CONFIG_UI=1
    - HOMEBRIDGE_CONFIG_UI_PORT=%WUIPort%
    volumes:
    - ./volumes/homebridge:/homebridge
  #ports:
  #  - "4040:4040"
    network_mode: host
  influxdb:
    container_name: influxdb
    image: "influxdb:1.8.4"
    restart: unless-stopped
    ports:
    - "8086:8086"
    environment:
    - INFLUXDB_HTTP_FLUX_ENABLED=false
    - INFLUXDB_REPORTING_DISABLED=false
    - INFLUXDB_HTTP_AUTH_ENABLED=false
    - INFLUX_USERNAME=dba
    - INFLUX_PASSWORD=supremo
    - INFLUXDB_UDP_ENABLED=false
    - INFLUXDB_UDP_BIND_ADDRESS=0.0.0.0:8086
    - INFLUXDB_UDP_DATABASE=udp
    volumes:
    - ./volumes/influxdb/data:/var/lib/influxdb
    - ./backups/influxdb/db:/var/lib/influxdb/backup
    networks:
    - iotstack_nw

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: unless-stopped
    user: "1883"
    ports:
    - "1883:1883"
    volumes:
    - ./volumes/mosquitto/data:/mosquitto/data
    - ./volumes/mosquitto/log:/mosquitto/log
    - ./volumes/mosquitto/pwfile:/mosquitto/pwfile
    - ./services/mosquitto:/mosquitto/config:ro
    networks:
    - iotstack_nw
  motioneye:
    image: "ccrisan/motioneye:master-armhf"
    container_name: "motioneye"
    restart: unless-stopped
    ports:
    - "8765:8765"
    - "8081:8081"
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - ./volumes/motioneye/etc_motioneye:/etc/motioneye
    - ./volumes/motioneye/var_lib_motioneye:/var/lib/motioneye
    networks:
    - iotstack_nw

  nodered:
    container_name: nodered
    build: ./services/nodered/.
    restart: unless-stopped
    user: "0"
    privileged: true
    environment:
    - TZ=Etc/UTC
    ports:
    - "1880:1880"
    volumes:
    - ./volumes/nodered/data:/data
    - /var/run/docker.sock:/var/run/docker.sock
    - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
    devices:
    - "/dev/ttyAMA0:/dev/ttyAMA0"
    - "/dev/vcio:/dev/vcio"
    - "/dev/gpiomem:/dev/gpiomem"
    networks:
    - iotstack_nw
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
    - "8089:80/tcp"
    - "53:53/tcp"
    - "53:53/udp"
    - "67:67/udp"
    environment:
    - WEBPASSWORD=IOtSt4ckP1Hol3
    - INTERFACE=eth0
    volumes:
    - ./volumes/pihole/etc-pihole/:/etc/pihole/
    - ./volumes/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/
    dns:
    - 127.0.0.1
    - 1.1.1.1
    cap_add:
    - NET_ADMIN
    restart: unless-stopped
    networks:
    - iotstack_nw
    - vpn_nw

# Recommended but not required (DHCP needs NET_ADMIN)
#   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
    - PUID=1000
    - PGID=1000
    - VERSION=docker
    volumes:
    - ./volumes/plex/config:/config
    - ./volumes/plex/transcode:/transcode
    restart: unless-stopped
  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    environment:
    - POSTGRES_USER=postuser
    - POSTGRES_PASSWORD=IOtSt4ckpostgresDbPw
    - POSTGRES_DB=postdb
    ports:
    - "5432:5432"
    volumes:
    - ./volumes/postgres/data:/var/lib/postgresql/data
    networks:
    - iotstack_nw
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    user: "0"
    ports:
    - "9090:9090"
    volumes:
    - ./services/prometheus/config.yml:/etc/prometheus/config.yml
    - ./volumes/prometheus/data:/data
    command:
    - '--config.file=/etc/prometheus/config.yml'
    - '--storage.tsdb.path=/data'
  rtl_433:
    container_name: rtl_433
    build: ./services/rtl_433/.
    depends_on:
    - mosquitto
    environment:
    - TZ=Etc/UTC
    - MQTT_ADDRESS=mosquitto
    - MQTT_PORT=1883
    - MQTT_TOPIC=RTL_433
    devices:
    - /dev/bus/usb
    networks:
    - iotstack_nw
    restart: unless-stopped
  tasmoadmin:
    container_name: tasmoadmin
    image: raymondmm/tasmoadmin
    restart: unless-stopped
    ports:
    - "8088:80"
    volumes:
    - ./volumes/tasmoadmin/data:/data
    networks:
    - iotstack_nw

  telegraf:
    container_name: telegraf
    image: telegraf
    restart: unless-stopped
    volumes:
    - ./services/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
    - influxdb
    - mosquitto
    networks:
    - iotstack_nw
  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Etc/UTC
    volumes:
    - ./volumes/transmission/config:/config
    - ./volumes/transmission/downloads:/downloads
    - ./volumes/transmission/watch:/watch
    ports:
    - "9091:9091"
    - "51413:51413"
    - "51413:51413/udp"
    restart: unless-stopped
    networks:
    - iotstack_nw
  zigbee2mqtt_assistant:
    container_name: zigbee2mqtt_assistant
    image: carldebilly/zigbee2mqttassistant
    restart: unless-stopped
    ports:
    - "8880:80"
    environment:
    - VIRTUAL_HOST=~^zigbee2mqtt_assistant\..*\.xip\.io
    - Z2MA_SETTINGS__MQTTSERVER=mosquitto
    - VIRTUAL_PORT=8880
    networks:
    - iotstack_nw

  zigbee2mqtt:
    container_name: zigbee2mqtt
    build: ./.templates/zigbee2mqtt/.
    environment:
    - TZ=Etc/UTC
    ports:
    - "8080:8080"
    volumes:
    - ./volumes/zigbee2mqtt/data:/app/data
    devices:
    - /dev/ttyAMA0:/dev/ttyACM0 # should work even if no adapter
   #- /dev/ttyACM0:/dev/ttyACM0 # should work if CC2531 connected
   #- /dev/ttyUSB0:/dev/ttyACM0 # Electrolama zig-a-zig-ah! (zzh!) maybe other as well
    restart: unless-stopped
    networks:
    - iotstack_nw
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    cap_add:
    - NET_ADMIN
    - SYS_MODULE
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Berlin
    - SERVERURL=<enter yours>.duckdns.org
    - SERVERPORT=51820
    - PEERS=1
    - PEERDNS=auto
    - INTERNAL_SUBNET=100.64.0.0/24
    volumes:
    - ./services/wireguard/config:/config
    - /lib/modules:/lib/modules
    ports:
    - "51820:51820/udp"
    sysctls:
    - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
  timescaledb:
    container_name: timescaledb
    image: timescale/timescaledb:latest-pg12
    restart: unless-stopped
    environment: POSTGRES_USER=timescaleuser POSTGRES_PASSWORD=%randomPassword% POSTGRES_DB=postdb
    ports:
    - "5432:5432"
    volumes:
    - ./volumes/timescaledb/data:/var/lib/postgresql/data
    networks:
    - iotstack_nw
  homer:
    image: b4bz/homer:latest
    container_name: homer
    environment:
    - UID=1000
    - GID=1000
    volumes:
    - ./volumes/homer/assets:/www/assets
    ports:
    - "8881:8080"
    restart: unless-stopped
  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Paris
    volumes:
    - ./volumes/heimdall/config:/config
    ports:
    - 8880:80
    - 8883:443
    restart: unless-stopped
  gitea:
    container_name: gitea
    image: "kunde21/gitea-arm:latest"
    restart: unless-stopped
    ports:
    - "7920:3000/tcp"
    - "2222:22/tcp"
    environment:
    - USER_UID=1000
    - USER_GID=1000
    volumes:
    - ./volumes/gitea/data:/data
    - /etc/timezone:/etc/timezone:ro
    networks:
    - iotstack_nw
  espruinohub:
    container_name: espruinohub
    image: humbertosales/espruinohub-docker-rpi
    network_mode: host
    privileged: true
    restart: unless-stopped
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    restart: unless-stopped
    network_mode: host
  #ports:
  # - "8888:8080"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  domoticz:
    container_name: domoticz
    image: linuxserver/domoticz:stable
    ports:
    - "8080:8080"
    - "6144:6144"
    - "1443:1443"
    volumes:
    - ./volumes/domoticz/data:/config
    restart: unless-stopped
    network_mode: bridge
    environment:
    - PUID=1000
    - PGID=1000
    # - TZ=
    # - WEBROOT=domoticz
  diyhue:
    container_name: diyhue
    image: diyhue/core:latest
    ports:
    - "8070:80/tcp"
    - "1900:1900/udp"
    - "1982:1982/udp"
    - "2100:2100/udp"
    environment:
    - IP=192.168.8.167
    - MAC=dc:a6:32:d6:4b:c7
    volumes:
    - ./volumes/diyhue/:/opt/hue-emulator/export/
    restart: unless-stopped
    networks:
    - iotstack_nw
  deconz:
    image: marthoc/deconz
    container_name: deconz
    restart: unless-stopped
    ports:
    - "8090:80"
    - "443:443"
    - "5901:5900"
    volumes:
    - ./volumes/deconz/:/root/.local/share/dresden-elektronik/deCONZ
    devices: # This list is replaced during the build process. Modify the list in "build_settings.yml" to change it.
    - /dev/null
    environment:
    - DECONZ_VNC_MODE=1
    - DECONZ_VNC_PASSWORD=%randomPassword%
    - DEBUG_INFO=1
    - DEBUG_APS=0
    - DEBUG_ZCL=0
    - DEBUG_ZDP=0
    - DEBUG_OTAU=0
    networks:
    - iotstack_nw

  dashmachine:
    image: rmountjoy/dashmachine:latest
    container_name: dashmachine
    volumes:
    - ./volumes/dashmachine/user_data:/dashmachine/dashmachine/user_data
    ports:
    - 5000:5000
    restart: unless-stopped
  blynk_server:
    build: ./services/blynk_server/.
    container_name: blynk_server
    restart: unless-stopped
    ports:
    - "8180:8080"
    - "8441:8441"
    - "9443:9443"
    volumes:
    - ./volumes/blynk_server/data:/data
    - ./volumes/blynk_server/config:/config
    networks:
    - iotstack_nw

  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    ports:
    - "9080:8080"
    networks:
    - iotstack_nw
networks:
  iotstack_nw: # Exposed by your host.
    # external: true
    name: IOTstack_Net
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.77.60.0/24
        # - gateway: 10.77.60.1

  iotstack_nw_internal: # For interservice communication. No access to outside
    name: IOTstack_Net_Internal
    driver: bridge
    internal: true
    ipam:
      driver: default
      config:
      - subnet: 10.77.76.0/24
        # - gateway: 10.77.76.1
  vpn_nw: # Network specifically for VPN
    name: IOTstack_VPN
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.77.88.0/24
        # - gateway: 192.18.200.1

  nextcloud_internal: # Network for NextCloud service
    name: IOTstack_NextCloud
    driver: bridge
    internal: true

  # default:
  #   external: true
  #   name: iotstack_nw

  # hosts_nw:
  #   driver: hosts
